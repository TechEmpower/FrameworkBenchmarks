/*
 * This file is generated by jOOQ.
 */
package models.tables.records;


import models.tables.World;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorldRecord extends UpdatableRecordImpl<WorldRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>hello_world.world.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>hello_world.world.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>hello_world.world.randomNumber</code>.
     */
    public void setRandomnumber(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>hello_world.world.randomNumber</code>.
     */
    public Integer getRandomnumber() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WorldRecord
     */
    public WorldRecord() {
        super(World.WORLD);
    }

    /**
     * Create a detached, initialised WorldRecord
     */
    public WorldRecord(UInteger id, Integer randomnumber) {
        super(World.WORLD);

        setId(id);
        setRandomnumber(randomnumber);
        resetChangedOnNotNull();
    }
}
