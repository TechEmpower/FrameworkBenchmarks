<!--
  
  Ant build script for GeminiHello.  Running this script produces a .zip archive 
  with the following structure:
  
    GeminiHello-yyyy-MM-dd.zip
       |~ GeminiHello.war
       |~ Source
       |~~~ (The current source code of GeminiHello and Gemini.)
  
-->
<project default="build" name="geminihello" xmlns:ivy="antlib:org.apache.ivy.ant" >

  <target name="compile">
    
    <!-- Import environment variables. -->
    <property environment="Environment" />
    
    <!-- Declare other variables which can be overridden in a personalized
         build.properties file. -->
    <property name="Resin" value="${Environment.RESIN_HOME}" />
    <property name="GeminiHello" value="." />
    
    <!-- Compile the source into WEB-INF/classes. -->
    <javac srcdir="${GeminiHello}/Source" destdir="${GeminiHello}/Docroot/WEB-INF/classes" includes="**/*">
      <classpath>
        <pathelement location="${Resin}/lib/javaee-16.jar" />
        <pathelement location="${Resin}/lib/resin.jar" />
        <fileset dir="${GeminiHello}/Docroot/WEB-INF/lib">
          <include name="**/*.jar" />
        </fileset>
     </classpath>
    </javac>
    
  </target>

  <property name="ivy.install.version" value="2.4.0" />
  <condition property="ivy.home" value="${env.IVY_HOME}">
    <isset property="env.IVY_HOME" />
  </condition>
  <property name="ivy.home" value="${user.home}/.ant" />
  <property name="ivy.jar.dir" value="${ivy.home}/lib" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

  <target name="download-ivy" unless="offline">

      <mkdir dir="${ivy.jar.dir}"/>
      <!-- download Ivy from web site so that it can be used even without any special installation -->
      <get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
            dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>

  <target name="init-ivy" depends="download-ivy">
    <!-- try to load ivy here from ivy home, in case the user has not already dropped
            it into ant's lib dir (note that the latter copy will always take precedence).
            We will not fail as long as local lib dir exists (it may be empty) and
            ivy is in at least one of ant's lib dir or the local lib dir. -->
      <path id="ivy.lib.path">
          <fileset dir="${ivy.jar.dir}" includes="*.jar"/>

      </path>
      <taskdef resource="org/apache/ivy/ant/antlib.xml"
                uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>
  
  <target name="resolve" depends="init-ivy" description="--> retrieve dependencies with ivy">
    <ivy:settings file="./ivysettings.xml"/>
    <ivy:resolve conf="default" />
    <ivy:retrieve pattern="Docroot/WEB-INF/lib/[artifact](-[classifier]).[ext]" />
  </target>
  
</project>
