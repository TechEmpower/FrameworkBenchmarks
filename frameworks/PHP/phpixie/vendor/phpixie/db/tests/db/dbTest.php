<?php


/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-02-07 at 10:14:10.
 */
class DB_Test extends PHPUnit_Framework_TestCase
{

	/**
	 * @var Expression_Database
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		
		$this->db_file = tempnam(sys_get_temp_dir(), 'test.sqlite');
		$this->conf_file = tempnam(sys_get_temp_dir(), 'test.conf');
		file_put_contents($this->db_file, '');
		$db = new PDO('sqlite:'.$this->db_file);
		$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
		$db->exec("CREATE TABLE fairies(id INT PRIMARY_KEY,name VARCHAR(255))");
		$pixie = $this->getMock('\PHPixie\Pixie',array('find_file'));
		$pixie->expects($this->any())
                 ->method('find_file')
                 ->will($this->returnValue($this->conf_file));
		$pixie->db = $this->getMockBuilder('\PHPixie\DB')
				->disableOriginalConstructor()
				->getMock();
		$pixie->db->expects($this->any())
                 ->method('query_driver')
                 ->will($this->returnValue(null));
		$pixie->config->set('db.default.connection', 'sqlite:'.$this->db_file);
		$pixie-> config->set('db.default.driver', 'pdo');
		$this->object = new \PHPixie\DB($pixie);
		$pixie-> db = $this->object;
		$db = null;
	}
	
	public function testGet() {
		$this->object->get()->test = 'same';
		$this->assertEquals('same', $this->object->get()->test);
		$this->assertEquals('PHPixie\DB\PDO\Connection', get_class($this->object->get()));
	}
	
	public function testQuery() {
		$this->assertEquals('PHPixie\DB\PDO\Query', get_class($this->object->query('select')));
	}
	
	public function testInsert_id()
	{
		$this->object->get()->execute("INSERT INTO fairies(name)values('Trixie')");
		$this->assertEquals(1, $this->object->insert_id());
	}

	public function testList_columns()
	{
		$cols = $this->object->list_columns('fairies');
		$this->assertContains('id', $cols);
		$this->assertContains('name', $cols);
	}
	
	public function testExpr() {
		$this->assertEquals('PHPixie\DB\Expression', get_class($this->object->expr("test")));
	}
	
	public function testQuery_driver() {
		$this->assertEquals('PHPixie\DB\PDO\Query', get_class($this->object->query_driver('pdo',$this->object->get(),'select')));
	}
	
	public function testResult_driver() {
		$this->assertEquals('PHPixie\DB\PDO\Result', get_class($this->object->result_driver('pdo',null)));
	}
	
	
}
