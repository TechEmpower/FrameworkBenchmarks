[framework]
name = "imi"

[main]
dockerfile = "imi-swoole.dockerfile"
urls.plaintext = "/plaintext"
urls.json = "/json"
urls.db = "/dbModel"
urls.query = "/queryModel?queries="
urls.update = "/updateModel?queries="
urls.fortune = "/fortunes"
urls.cached_query = "/cached-worlds?count="
approach = "Realistic"
classification = "Fullstack"
database = "MySQL"
database_os = "Linux"
os = "Linux"
orm = "Full"
platform = "Swoole"
webserver = "None"
versus = "Swoole"

[swoole-mysql-raw]
dockerfile = "imi-swoole.dockerfile"
urls.db = "/dbRaw"
urls.query = "/queryRaw?queries="
urls.update = "/updateRaw?queries="
urls.fortune = "/fortunesRaw"
approach = "Realistic"
classification = "Micro"
database = "MySQL"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "Swoole"
webserver = "None"
versus = "Swoole"

[workerman]
dockerfile = "imi-workerman.dockerfile"
urls.plaintext = "/plaintext"
urls.json = "/json"
urls.db = "/dbModel"
urls.query = "/queryModel?queries="
urls.update = "/updateModel?queries="
urls.fortune = "/fortunes"
urls.cached_query = "/cached-worlds?count="
approach = "Realistic"
classification = "Fullstack"
database = "MySQL"
database_os = "Linux"
os = "Linux"
orm = "Full"
platform = "Workerman"
webserver = "None"
versus = "Workerman"

[workerman-mysql-raw]
dockerfile = "imi-workerman.dockerfile"
urls.db = "/dbRaw"
urls.query = "/queryRaw?queries="
urls.update = "/updateRaw?queries="
urls.fortune = "/fortunesRaw"
approach = "Realistic"
classification = "Micro"
database = "MySQL"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "Workerman"
webserver = "None"
versus = "Workerman"

[swoole-pgsql]
dockerfile = "imi-swoole.dockerfile"
urls.db = "/pgDbModel"
urls.query = "/pgQueryModel?queries="
urls.update = "/pgUpdateModel?queries="
urls.fortune = "/pgFortunes"
approach = "Realistic"
classification = "Fullstack"
database = "Postgres"
database_os = "Linux"
os = "Linux"
orm = "Full"
platform = "Swoole"
webserver = "None"
versus = "Swoole"

[swoole-pgsql-raw]
dockerfile = "imi-swoole.dockerfile"
urls.db = "/dbRaw"
urls.query = "/pgQueryRaw?queries="
urls.update = "/pgUpdateRaw?queries="
urls.fortune = "/pgFortunesRaw"
approach = "Realistic"
classification = "Micro"
database = "Postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "Swoole"
webserver = "None"
versus = "Swoole"

[workerman-pgsql]
dockerfile = "imi-workerman.dockerfile"
urls.db = "/pgDbModel"
urls.query = "/pgQueryModel?queries="
urls.update = "/pgUpdateModel?queries="
urls.fortune = "/pgFortunes"
approach = "Realistic"
classification = "Fullstack"
database = "Postgres"
database_os = "Linux"
os = "Linux"
orm = "Full"
platform = "Workerman"
webserver = "None"
versus = "Workerman"

[workerman-pgsql-raw]
dockerfile = "imi-workerman.dockerfile"
urls.db = "/dbRaw"
urls.query = "/pgQueryRaw?queries="
urls.update = "/pgUpdateRaw?queries="
urls.fortune = "/pgFortunesRaw"
approach = "Realistic"
classification = "Micro"
database = "Postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "Workerman"
webserver = "None"
versus = "Workerman"
