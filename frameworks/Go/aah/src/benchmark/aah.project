########################################
# benchmark - aah framework project
#
# Note: Add it to version control
########################################

# Build section is used during aah application compile and build command.
build {
  # Application binary name
  # Default value is `name` attribute value from `aah.conf`
  #binary_name = "benchmark"

  # Used as fallback if
  #   - `git commit sha` or
  #   - `AAH_APP_VERSION` environment value is not available.
  version = "0.0.1"

  # If application is missing any dependencies in `build import path`
  # during a compile and build, aah CLI will try to get dependencies
  # using 'go get <package>'.
  # Default value is `false`.
  #dep_get = true

  # Log level is used for aah CLI tool logging.
  # Default value is `info`.
  #log_level = "info"

  flags = ["-i"]

  ldflags = ""

  tags = ""

  # AST excludes is used for `aah.Context` inspection and generating aah
  # application main Go file. Valid exclude patterns
  # refer: https://golang.org/pkg/path/filepath/#Match
  ast_excludes = ["*_test.go", ".*", "*.bak", "*.tmp", "vendor"]

  # Packing excludes is used to exclude file/directory during aah application
  # build archive. Valid exclude patterns
  # refer: https://golang.org/pkg/path/filepath/#Match
  excludes = ["*.go", "*_test.go", ".*", "*.bak", "*.tmp", "vendor", "app", "build", "tests", "logs"]
}
