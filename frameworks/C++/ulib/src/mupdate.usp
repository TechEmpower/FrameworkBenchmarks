<!--#
Test type 5: Database updates
TechEmpower Web Framework Benchmarks
-->
<!--#declaration
#include "world.h"

static UMongoDBClient* mc;
static World* pworld_update;

#ifndef AS_cpoll_cppsp_DO
static UValue* pvalue;
static UVector<World*>* pvworld_update;
#endif

static void usp_fork_mupdate()
{
   U_TRACE(5, "::usp_fork_mupdate()")

   mc = U_NEW(UMongoDBClient);

   if (mc->connect() == false)
      {
      U_WARNING("usp_fork_mupdate(): connection disabled or failed");

      return;
      }

   if (mc->selectCollection("hello_world", "World") == false)
      {
      U_WARNING("usp_fork_mupdate(): selectCollection() failed");

      return;
      }

   pworld_update = U_NEW(World);

#ifndef AS_cpoll_cppsp_DO
   pvalue         = U_NEW(UValue(ARRAY_VALUE));
   pvworld_update = U_NEW(UVector<World*>(500));
#endif
}

#ifdef DEBUG
static void usp_end_mupdate()
{
   U_TRACE(5, "::usp_end_mupdate()")

   delete mc;

   if (pworld_update)
      {
      delete pworld_update;

#  ifndef AS_cpoll_cppsp_DO
      delete pvalue;
      delete pvworld_update;
#  endif
      }
}
#endif
-->
<!--#header
Content-Type: application/json
-->
<!--#code
int i = 0, num_queries = UHTTP::getFormFirstNumericValue(1, 500);

#ifdef AS_cpoll_cppsp_DO
USP_PUTS_CHAR('[');
#endif

while (true)
   {
   (void) mc->findOne(pworld_update->id = u_get_num_random(10000));

   (void) mc->update(pworld_update->id, "randomNumber", pworld_update->randomNumber = u_get_num_random(10000));

#ifdef AS_cpoll_cppsp_DO
   USP_PRINTF("{\"id\":%u,\"randomNumber\":%u}", pworld_update->id, pworld_update->randomNumber);
#else
   pvworld_update->push_back(U_NEW(World(*pworld_update)));
#endif

   if (++i == num_queries) break;

#ifdef AS_cpoll_cppsp_DO
   USP_PUTS_CHAR(',');
#endif
   }

#ifdef AS_cpoll_cppsp_DO
USP_PUTS_CHAR(']');
#else
USP_JSON_stringify(*pvalue, UVector<World*>, *pvworld_update);
pvalue->clear();
pvworld_update->clear();
#endif
-->
