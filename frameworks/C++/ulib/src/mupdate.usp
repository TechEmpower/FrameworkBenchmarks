<!--#
Test type 5: Database updates
TechEmpower Web Framework Benchmarks
-->
<!--#declaration
#include "world.h"

static UMongoDBClient* mc;

#ifndef AS_cpoll_cppsp_DO
static UVector<World*>* pvworld_update;
#endif

static void usp_fork_mupdate()
{
   U_TRACE(5, "::usp_fork_mupdate()")

   U_NEW(UMongoDBClient, mc, UMongoDBClient);

   if (mc->connect(U_NULLPTR, 0) == false)
      {
      U_WARNING("usp_fork_mupdate(): connection disabled or failed");

      return;
      }

   if (mc->selectCollection("hello_world", "world") == false)
      {
      U_WARNING("usp_fork_mupdate(): selectCollection() failed");

      return;
      }

#ifndef AS_cpoll_cppsp_DO
   U_NEW(UVector<World*>, pvworld_update, UVector<World*>(500));
#endif
}

#ifdef DEBUG
static void usp_end_mupdate()
{
   U_TRACE(5, "::usp_end_mupdate()")

   delete mc;

#ifndef AS_cpoll_cppsp_DO
   if (pvworld_update) delete pvworld_update;
#endif
}
#endif
-->
<!--#header
Content-Type: application/json
-->
<!--#code
uint32_t id, rnum;
//mongoc_bulk_operation_t* bulk = mc->createBulk(false);
int i = 0, num_queries = UHTTP::getFormFirstNumericValue(1, 500);

#ifdef AS_cpoll_cppsp_DO
USP_PUTS_CHAR('[');
#endif

while (true)
   {
// mc->updateOneBulk(bulk, id = u_get_num_random(10000-1), "randomNumber", rnum = u_get_num_random(10000-1));

   if (mc->findOne(id = u_get_num_random(10000-1)) &&
       mc->update( id, "randomNumber", rnum = u_get_num_random(10000-1)))
      {
#  ifdef AS_cpoll_cppsp_DO
      USP_PRINTF("{\"id\":%u,\"randomNumber\":%u}", id, rnum);
#  else
      World* pworld;

      U_NEW(World, pworld, World(id, rnum));

      pvworld_update->push_back(pworld);
#  endif
      }

   if (++i == num_queries) break;

#ifdef AS_cpoll_cppsp_DO
   USP_PUTS_CHAR(',');
#endif
   }

// (void) mc->executeBulk(bulk);

#ifdef AS_cpoll_cppsp_DO
USP_PUTS_CHAR(']');
#else
USP_OBJ_JSON_stringify(*pvworld_update);
pvworld_update->clear();
#endif
-->
