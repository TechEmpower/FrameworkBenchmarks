<!--#
Test type 2: Single database query
TechEmpower Web Framework Benchmarks
-->
<!--#declaration
#include "world.h"

static UMongoDBClient* mc;

#ifndef AS_cpoll_cppsp_DO
static UValue*	pvalue;
#endif

static void usp_fork_mdb()
{
	U_TRACE(5, "::usp_fork_mdb()")

	U_NEW(UMongoDBClient, mc, UMongoDBClient);

	if (mc->connect() == false)
		{
		U_WARNING("usp_fork_mdb(): connection failed");

		return;
		}

	if (mc->selectCollection("hello_world", "World") == false)
		{
		U_WARNING("usp_fork_mdb(): selectCollection() failed");

		return;
		}

#ifndef AS_cpoll_cppsp_DO
	U_NEW(UValue, pvalue, UValue(OBJECT_VALUE));
#endif
}

#ifdef DEBUG
static void usp_end_mdb()
{
	U_TRACE(5, "::usp_end_mdb()")

	delete mc;

#ifndef AS_cpoll_cppsp_DO
	if (pvalue) delete pvalue;
#endif
}
#endif
-->
<!--#header
Content-Type: application/json
-->
<!--#code
uint32_t id;
UString result;

(void) mc->findOne(id = u_get_num_random(10000-1));

(void) UValue::jfind(mc->vitem[0], U_CONSTANT_TO_PARAM("randomNumber"), result);

#ifdef AS_cpoll_cppsp_DO
USP_PRINTF_ADD("{\"id\":%u,\"randomNumber\":%v}", id, result.rep);
#else
World world(id, u_strtoul(result.data(), result.end()));
USP_JSON_stringify(*pvalue, World, world);
pvalue->clear();
#endif
-->
