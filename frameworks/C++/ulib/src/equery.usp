<!--#
Test type 3: Multiple database queries
TechEmpower Web Framework Benchmarks
-->
<!--#declaration
#include "world.h"

static UString* jquery;
static char buffer[128];
static World* pworld_query;
static UElasticSearchClient* es;

#ifndef AS_cpoll_cppsp_DO
static UValue* pvalue;
static UVector<World*>* pvworld_query;
#endif

#define QLEN U_CONSTANT_SIZE("{\"query\":{\"match\":{\"_id\":\"")

static void usp_fork_equery()
{
   U_TRACE(5, "::usp_fork_equery()")

   U_NEW(UElasticSearchClient, es, UElasticSearchClient);

   if (es->connect() == false)
      {
      U_WARNING("usp_fork_equery(): connection disabled or failed");

      return;
      }

   U_NEW(World, pworld_query, World);
   U_NEW(UString, jquery, U_STRING_FROM_CONSTANT("randomNumber"));

#ifndef AS_cpoll_cppsp_DO
   U_NEW(UValue, pvalue, UValue(ARRAY_VALUE));
   U_NEW(UVector<World*>, pvworld_query, UVector<World*>(500));
#endif

   u__memcpy(buffer, "{\"query\":{\"match\":{\"_id\":\"", QLEN, __PRETTY_FUNCTION__);
}

#ifdef DEBUG
static void usp_end_equery()
{
   U_TRACE(5, "::usp_end_equery()")

   delete es;

   if (jquery)
      {
      delete jquery;
      delete pworld_query;

#  ifndef AS_cpoll_cppsp_DO
      delete pvalue;
      delete pvworld_query;
#  endif
      }
}
#endif
-->
<!--#header
Content-Type: application/json
-->
<!--#code
UString rnumber;
int i = 0, num_queries = UHTTP::getFormFirstNumericValue(1, 500);

#ifdef AS_cpoll_cppsp_DO
USP_PUTS_CHAR('[');
#endif

while (true)
   {
   (void) es->sendPOST(U_CONSTANT_TO_PARAM("/tfb/world/_search"), buffer, QLEN+u__snprintf(buffer+QLEN, 128, "%u\"}}}", pworld_query->id = u_get_num_random(10000-1)));

   (void) UValue::jfind(es->getContent(), *jquery, rnumber);

#ifdef AS_cpoll_cppsp_DO
   USP_PRINTF("{\"id\":%u,\"randomNumber\":%v}", pworld_query->id, rnumber.rep);
#else
   pworld_query->randomNumber = u_strtoul(rnumber.data(), rnumber.end());

   World* pworld;

   U_NEW(World, pworld, World(*pworld_query));

   pvworld_query->push_back(pworld);
#endif

   if (++i == num_queries) break;

#ifdef AS_cpoll_cppsp_DO
   USP_PUTS_CHAR(',');
#endif

   rnumber.clear();
   }

#ifdef AS_cpoll_cppsp_DO
USP_PUTS_CHAR(']');
#else
USP_JSON_stringify(*pvalue, UVector<World*>, *pvworld_query);
pvalue->clear();
pvworld_query->clear();
#endif
-->
