<!--#
Test type 5: Database updates
TechEmpower Web Framework Benchmarks
-->
<!--#declaration
#include "world.h"

#ifdef U_STATIC_ORM_DRIVER_PGSQL
static char query[8192];
#endif
static UOrmStatement* pstmt_update;

static void usp_fork_update()
{
   U_TRACE(5, "::usp_fork_update()")

   World::handlerForkSql();

   if (World::psql_query)
      {
#  ifdef U_STATIC_ORM_DRIVER_PGSQL
      if (World::pdrv) (void) memcpy(query, U_CONSTANT_TO_PARAM("UPDATE World SET randomNumber = v.randomNumber FROM (VALUES"));
      else
#  endif
      {
      U_NEW(UOrmStatement, pstmt_update, UOrmStatement(*World::psql_query, U_CONSTANT_TO_PARAM("UPDATE World SET randomNumber = ? WHERE id = ?")));

      pstmt_update->use(World::pworld_query->randomNumber, World::pworld_query->id);
      }
      }
}
-->
<!--#header
-->
<!--#vcode
uint32_t num_queries = UHTTP::getFormFirstNumericValue(1, 500);

/*
if (num_queries >= 20 &&
    UServer_Base::startParallelization())
   {
   return;
   }
*/
-->
<!--#code
World::initResult();

#ifdef U_STATIC_ORM_DRIVER_PGSQL
if (World::pdrv)
   {
   PGresult* res;
   char* pquery = query + U_CONSTANT_SIZE("UPDATE World SET randomNumber = v.randomNumber FROM (VALUES");

   for (uint32_t i = 0; i < num_queries; ++i)
      {
      *pquery++ = '(';

      pquery = u_num2str32(World::pworld_query->id = World::rnumber[i], pquery);

      World::pstmt->setBindParam();

      res = World::pdrv->execPrepared(World::pstmt);

      U_INTERNAL_ASSERT_EQUALS(PQnfields(res), 1)
      U_INTERNAL_ASSERT_EQUALS(PQntuples(res), 1)

      (void) U_SYSCALL(PQgetvalue, "%p,%d,%d", res, 0, 0);

      *pquery++ = ',';

      pquery = u_num2str32(World::pworld_query->randomNumber = u_get_num_random_range1(10000), pquery);

      u_put_unalignedp16(pquery, U_MULTICHAR_CONSTANT16(')',','));
                         pquery += 2;

      World::handlerResultSql(i);

      U_SYSCALL_VOID(PQclear, "%p", res);
      }

   World::endResult();

   (void) memcpy(pquery-1, ") AS v (id,randomNumber) WHERE World.id = v.id;",
           U_CONSTANT_SIZE(") AS v (id,randomNumber) WHERE World.id = v.id;")+1);

   res = (PGresult*) U_SYSCALL(PQexec, "%p,%S", (PGconn*)World::pdrv->UOrmDriver::connection, query);

   U_INTERNAL_ASSERT_EQUALS(PQresultStatus(res), PGRES_COMMAND_OK)

   U_SYSCALL_VOID(PQclear, "%p", res);
   }
else
#endif
{
for (uint32_t i = 0; i < num_queries; ++i)
   {
   World::pworld_query->id = World::rnumber[i];

   World::pstmt_query->execute();

   World::pworld_query->randomNumber = u_get_num_random_range1(10000);

   pstmt_update->execute();

   World::handlerResultSql(i);
   }

World::endResult();
}
-->
