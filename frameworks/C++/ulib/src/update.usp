<!--#
Test type 5: Database updates
TechEmpower Web Framework Benchmarks
-->
<!--#declaration
#include "world.h"

static World*         pworld_update;
static UOrmSession*   psql_update;
static UOrmStatement* pstmt1;
static UOrmStatement* pstmt2;

#ifndef AS_cpoll_cppsp_DO
static UVector<World*>* pvworld_update;
#endif

static void usp_fork_update()
{
   U_TRACE(5, "::usp_fork_update()")

   U_NEW(UOrmSession, psql_update, UOrmSession(U_CONSTANT_TO_PARAM("hello_world")));

   if (psql_update->isReady() == false)
      {
      U_WARNING("usp_fork_update(): we cound't connect to db");

      return;
      }

   U_NEW(UOrmStatement, pstmt1, UOrmStatement(*psql_update, U_CONSTANT_TO_PARAM("SELECT randomNumber FROM World WHERE id = ?")));
   U_NEW(UOrmStatement, pstmt2, UOrmStatement(*psql_update, U_CONSTANT_TO_PARAM("UPDATE World SET randomNumber = ? WHERE id = ?")));

   if (UOrmDriver::isPGSQL()) *psql_update << "SET synchronous_commit TO OFF";

   U_NEW(World, pworld_update, World);

   pstmt1->use( pworld_update->id);
   pstmt1->into(pworld_update->randomNumber);
   pstmt2->use( pworld_update->randomNumber, pworld_update->id);

#ifndef AS_cpoll_cppsp_DO
   U_NEW(UVector<World*>, pvworld_update, UVector<World*>(500));
#endif
}

#ifdef DEBUG
static void usp_end_update()
{
   U_TRACE(5, "::usp_end_update()")

   delete psql_update;

   if (pstmt1 &&
       pstmt2)
      {
      delete pstmt1;
      delete pstmt2;
      delete pworld_update;

#  ifndef AS_cpoll_cppsp_DO
      delete pvworld_update;
#  endif
      }
}
#endif
-->
<!--#header
Content-Type: application/json
-->
<!--#code
int i = 0, num_queries = UHTTP::getFormFirstNumericValue(1, 500);

#ifdef AS_cpoll_cppsp_DO
USP_PUTS_CHAR('[');
#endif

while (true)
   {
   pworld_update->id = u_get_num_random(10000-1);

   pstmt1->execute();

   pworld_update->randomNumber = u_get_num_random(10000-1);

   pstmt2->execute();

#ifdef AS_cpoll_cppsp_DO
   USP_PRINTF("{\"id\":%u,\"randomNumber\":%u}", pworld_update->id, pworld_update->randomNumber);
#else
   World* pworld;

   U_NEW(World, pworld, World(*pworld_update));

   pvworld_update->push_back(pworld);
#endif

   if (++i == num_queries) break;

#ifdef AS_cpoll_cppsp_DO
   USP_PUTS_CHAR(',');
#endif
   }

#ifdef AS_cpoll_cppsp_DO
USP_PUTS_CHAR(']');
#else
USP_OBJ_JSON_stringify(*pvworld_update);
pvworld_update->clear();
#endif
-->
