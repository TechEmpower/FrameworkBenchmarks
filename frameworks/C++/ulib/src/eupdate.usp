<!--#
Test type 5: Database updates
TechEmpower Web Framework Benchmarks
-->
<!--#declaration
#include "world.h"

static char buffer1[128];
static char buffer2[128];
static World* pworld_update;
static UElasticSearchClient* es;

#ifndef AS_cpoll_cppsp_DO
static UValue*	pvalue;
static UVector<World*>* pvworld_update;
#endif

#define ULEN U_CONSTANT_SIZE("/tfb/world/")
#define QLEN U_CONSTANT_SIZE("{\"doc\":{\"_id\":\"")

static void usp_fork_eupdate()
{
	U_TRACE(5, "::usp_fork_eupdate()")

   U_NEW(UElasticSearchClient, es, UElasticSearchClient);

	if (es->connect() == false)
		{
		U_WARNING("usp_fork_eupdate(): connection disabled or failed");

		return;
		}

	U_NEW(World, pworld_update, World);

#ifndef AS_cpoll_cppsp_DO
	U_NEW(UValue, pvalue, UValue(ARRAY_VALUE));
	U_NEW(UVector<World*>, pvworld_update, UVector<World*>(500));
#endif

	u__memcpy(buffer1, "/tfb/world/",			 ULEN, __PRETTY_FUNCTION__);
	u__memcpy(buffer2, "{\"doc\":{\"_id\":\"", QLEN, __PRETTY_FUNCTION__);
}

#ifdef DEBUG
static void usp_end_eupdate()
{
	U_TRACE(5, "::usp_end_eupdate()")

	delete es;

	if (pworld_update)
		{
		delete pworld_update;

#	ifndef AS_cpoll_cppsp_DO
		delete pvalue;
		delete pvworld_update;
#	endif
		}
}
#endif
-->
<!--#header
Content-Type: application/json
-->
<!--#code
World* pworld;
int i = 0, num_queries = UHTTP::getFormFirstNumericValue(1, 500);

#ifdef AS_cpoll_cppsp_DO
USP_PUTS_CHAR('[');
#endif

while (true)
	{
	(void) es->sendPOST(buffer1, ULEN+u__snprintf(buffer1+ULEN, 128, "%u/_update", pworld_update->id			  = u_get_num_random(10000-1)),
							  buffer2, QLEN+u__snprintf(buffer2+QLEN, 128, "%u\"}}",	    pworld_update->randomNumber = u_get_num_random(10000-1)));

#ifdef AS_cpoll_cppsp_DO
	USP_PRINTF("{\"id\":%u,\"randomNumber\":%u}", pworld_update->id, pworld_update->randomNumber);
#else

	U_NEW(World, pworld, World(*pworld_update));

	pvworld_update->push_back(pworld);
#endif

   if (++i == num_queries) break;

#ifdef AS_cpoll_cppsp_DO
	USP_PUTS_CHAR(',');
#endif
	}

#ifdef AS_cpoll_cppsp_DO
USP_PUTS_CHAR(']');
#else
USP_JSON_stringify(*pvalue, UVector<World*>, *pvworld_update);
pvalue->clear();
pvworld_update->clear();
#endif
-->
