[framework]
name = "ffead-cpp"

[java-wizzardo-http]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "wizzardo-http"
versus = ""

[go-fasthttp]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "fasthttp"
versus = ""

[postgresql-raw-async-clibpqb-profiled]
urls.db = "/te-benchmark-um-pq-async/db"
urls.query = "/te-benchmark-um-pq-async/queries?queries="
urls.update = "/te-benchmark-um-pq-async/bupdates?queries="
urls.fortune = "/te-benchmark-um-pq-async/fortunes"
approach = "Realistic"
classification = "Fullstack"
database = "postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "None"
webserver = "ffead-cpp"
versus = ""

[java-rapidoid]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "rapidoid"
versus = ""

[postgresql-raw-profiled]
urls.db = "/te-benchmark-um-pq/db"
urls.query = "/te-benchmark-um-pq/queries?queries="
urls.update = "/te-benchmark-um-pq/updates?queries="
urls.fortune = "/te-benchmark-um-pq/fortunes"
approach = "Realistic"
classification = "Fullstack"
database = "postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "None"
webserver = "ffead-cpp"
versus = ""

[crystal-h2o]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "h2o.cr"
versus = ""

[mysql]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
urls.db = "/te-benchmark-um/db"
urls.query = "/te-benchmark-um/queries?queries="
urls.update = "/te-benchmark-um/updates?queries="
urls.fortune = "/te-benchmark-um/fortunes"
approach = "Realistic"
classification = "Fullstack"
database = "mysql"
database_os = "Linux"
os = "Linux"
orm = "Full"
platform = "None"
webserver = "ffead-cpp"
versus = ""

[v-picov]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um-pq/json"
urls.db = "/te-benchmark-um-pq/db"
urls.query = "/te-benchmark-um-pq/queries?queries="
urls.update = "/te-benchmark-um-pq/updates?queries="
urls.fortune = "/te-benchmark-um-pq/fortunes"
urls.cached_query = "/te-benchmark-um-pq/cached-worlds?count="
approach = "Realistic"
classification = "Fullstack"
database = "postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "None"
webserver = "picov"
versus = ""

[rust-actix]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "actix"
versus = ""

[cinatra]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "cinatra"
versus = ""

[d-hunt]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "hunt"
versus = ""

[rust-hyper]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "hyper"
versus = ""

[lithium]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "lithium"
versus = ""

[drogon]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "drogon"
versus = ""

[mongo-raw]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um-mgr/json"
urls.db = "/te-benchmark-um-mgr/db"
urls.query = "/te-benchmark-um-mgr/queries?queries="
urls.update = "/te-benchmark-um-mgr/updates?queries="
urls.fortune = "/te-benchmark-um-mgr/fortunes"
urls.cached_query = "/te-benchmark-um-mgr/cached-worlds?count="
approach = "Realistic"
classification = "Fullstack"
database = "mongodb"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "None"
webserver = "ffead-cpp"
versus = ""

[rust-thruster]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "thruster"
versus = ""

[go-gnet]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "gnet"
versus = ""

[postgresql-raw-async]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um-pq-async/json"
urls.db = "/te-benchmark-um-pq-async/db"
urls.query = "/te-benchmark-um-pq-async/queries?queries="
urls.update = "/te-benchmark-um-pq-async/bupdates?queries="
urls.fortune = "/te-benchmark-um-pq-async/fortunes"
urls.cached_query = "/te-benchmark-um-pq-async/cached-worlds?count="
approach = "Realistic"
classification = "Fullstack"
database = "postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "None"
webserver = "ffead-cpp"
versus = ""

[rust-rocket]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "rocket"
versus = ""

[nginx]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "mongodb"
database_os = "Linux"
os = "Linux"
orm = "Full"
platform = "None"
webserver = "nginx"
versus = ""

[apache]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "Full"
platform = "None"
webserver = "apache"
versus = ""

[postgresql-raw-async-profiled]
urls.db = "/te-benchmark-um-pq-async/db"
urls.query = "/te-benchmark-um-pq-async/queries?queries="
urls.update = "/te-benchmark-um-pq-async/bupdates?queries="
urls.fortune = "/te-benchmark-um-pq-async/fortunes"
approach = "Realistic"
classification = "Fullstack"
database = "postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "None"
webserver = "ffead-cpp"
versus = ""

[v-vweb]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "vweb"
versus = ""

[postgresql]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
urls.db = "/te-benchmark-um/db"
urls.query = "/te-benchmark-um/queries?queries="
urls.update = "/te-benchmark-um/updates?queries="
urls.fortune = "/te-benchmark-um/fortunes"
approach = "Realistic"
classification = "Fullstack"
database = "postgres"
database_os = "Linux"
os = "Linux"
orm = "Full"
platform = "None"
webserver = "ffead-cpp"
versus = ""

[postgresql-raw]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um-pq/json"
urls.db = "/te-benchmark-um-pq/db"
urls.query = "/te-benchmark-um-pq/queries?queries="
urls.update = "/te-benchmark-um-pq/updates?queries="
urls.fortune = "/te-benchmark-um-pq/fortunes"
urls.cached_query = "/te-benchmark-um-pq/cached-worlds?count="
approach = "Realistic"
classification = "Fullstack"
database = "postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "None"
webserver = "ffead-cpp"
versus = ""

[swift-nio]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "swift-nio"
versus = ""

[main]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
urls.db = "/te-benchmark-um/db"
urls.query = "/te-benchmark-um/queries?queries="
urls.update = "/te-benchmark-um/updates?queries="
urls.fortune = "/te-benchmark-um/fortunes"
approach = "Realistic"
classification = "Fullstack"
database = "mongodb"
database_os = "Linux"
os = "Linux"
orm = "Full"
platform = "None"
webserver = "ffead-cpp"
versus = ""

[java-firenio]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "firenio"
versus = ""

[libreactor]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "libreactor"
versus = ""

[postgresql-raw-clibpqb-profiled]
urls.db = "/te-benchmark-um-pq/db"
urls.query = "/te-benchmark-um-pq/queries?queries="
urls.update = "/te-benchmark-um-pq/updates?queries="
urls.fortune = "/te-benchmark-um-pq/fortunes"
approach = "Realistic"
classification = "Fullstack"
database = "postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "None"
webserver = "ffead-cpp"
versus = ""

[h2o]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "h2o"
versus = ""

[crystal-http]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "crystal-http"
versus = ""

[julia-http]
urls.plaintext = "/plaintext"
urls.json = "/te-benchmark-um/json"
approach = "Realistic"
classification = "Fullstack"
database = "None"
database_os = "Linux"
os = "Linux"
orm = "None"
platform = "None"
webserver = "julia-http"
versus = ""
