[framework]
name = "flask"

[main]
urls.plaintext = "/plaintext"
urls.json = "/json"
urls.db = "/db"
urls.query = "/queries?queries="
urls.update = "/updates?queries="
urls.fortune = "/fortunes"
approach = "Realistic"
classification = "Micro"
database = "Postgres"
database_os = "Linux"
os = "Linux"
orm = "Full"
platform = "WSGI"
webserver = "Meinheld"
versus = "wsgi"

[raw]
urls.plaintext = "/plaintext"
urls.json = "/json-raw"
urls.db = "/db-raw"
urls.query = "/queries-raw?queries="
urls.update = "/updates-raw?queries="
urls.fortune = "/fortunes-raw"
approach = "Realistic"
classification = "Micro"
database = "Postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "WSGI"
webserver = "Meinheld"
versus = "wsgi"

[nginx-uwsgi]
urls.plaintext = "/plaintext"
urls.json = "/json"
urls.db = "/db"
urls.query = "/queries?queries="
urls.update = "/updates?queries="
urls.fortune = "/fortunes"
approach = "Realistic"
classification = "Micro"
database = "Postgres"
database_os = "Linux"
os = "Linux"
orm = "Full"
platform = "WSGI"
webserver = "nginx"
versus = "wsgi"

[pypy-raw]
urls.plaintext = "/plaintext"
urls.json = "/json-raw"
urls.db = "/db-raw"
urls.query = "/queries-raw?queries="
urls.update = "/updates-raw?queries="
urls.fortune = "/fortunes-raw"
approach = "Realistic"
classification = "Micro"
database = "Postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "WSGI"
webserver = "Meinheld"
versus = "wsgi"

[socketify-wsgi]
urls.plaintext = "/plaintext"
urls.json = "/json-raw"
approach = "Realistic"
classification = "Micro"
database = "Postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "WSGI"
webserver = "Socketify.py"
versus = "wsgi"

[socketify-wsgi-pypy]
urls.plaintext = "/plaintext"
urls.json = "/json-raw"
approach = "Realistic"
classification = "Micro"
database = "Postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "WSGI"
webserver = "Socketify.py"
versus = "wsgi"

[pypy]
urls.plaintext = "/plaintext"
urls.json = "/json"
urls.db = "/db"
urls.query = "/queries?queries="
urls.update = "/updates?queries="
urls.fortune = "/fortunes"
approach = "Realistic"
classification = "Micro"
database = "Postgres"
database_os = "Linux"
os = "Linux"
orm = "Full"
platform = "WSGI"
webserver = "Meinheld"
versus = "wsgi"

[fastwsgi]
urls.plaintext = "/plaintext"
urls.json = "/json-raw"
approach = "Realistic"
classification = "Micro"
database = "Postgres"
database_os = "Linux"
os = "Linux"
orm = "Raw"
platform = "WSGI"
webserver = "FastWSGI"
versus = "wsgi"
