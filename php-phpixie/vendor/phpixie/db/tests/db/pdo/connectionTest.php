<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-02-07 at 12:41:50.
 */
class PDO_Connection_DriverTest extends PHPUnit_Framework_TestCase
{

	/**
	 * @var \PHPixie\DB\PDO\Connection
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->db_file = tempnam(sys_get_temp_dir(), 'test.sqlite');
		$this->conf_file = tempnam(sys_get_temp_dir(), 'test.conf');
		file_put_contents($this->db_file, '');
		$db = new PDO('sqlite:'.$this->db_file);
		$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
		$db->exec("CREATE TABLE fairies(id INT PRIMARY_KEY,name VARCHAR(255))");
		$pixie = $this->getMock('\PHPixie\Pixie',array('find_file'));
		$pixie->expects($this->any())
                 ->method('find_file')
                 ->will($this->returnValue($this->conf_file));
		$pixie-> db = new \PHPixie\DB($pixie);
		$pixie->config->set('db.default.connection', 'sqlite:'.$this->db_file);
		$pixie->config->set('db.default.driver', 'pdo');
		$this->object = new \PHPixie\DB\PDO\Connection($pixie, 'default');
		$db = null;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		$this->object->conn = null;
		unlink($this->db_file);
		unlink($this->conf_file);
	}

	/**
	 * @covers \PHPixie\DB\PDO\Connection::build_query
	 * @todo   Implement testBuild_query().
	 */
	public function test_query()
	{
		$this->assertEquals('PHPixie\DB\PDO\Query',get_class($this->object->query('select')));
	}

	/**
	 * @covers \PHPixie\DB\PDO\Connection::get_insert_id
	 * @todo   Implement testGet_insert_id().
	 */
	public function testInsert_id()
	{
		$this->object->execute("INSERT INTO fairies(name)values('Trixie')");
		$this->assertEquals(1, $this->object->insert_id());
	}

	/**
	 * @covers \PHPixie\DB\PDO\Connection::list_columns
	 * @todo   Implement testList_columns().
	 */
	public function testList_columns()
	{
		$cols = $this->object->list_columns('fairies');
		$this->assertContains('id', $cols);
		$this->assertContains('name', $cols);
	}

	/**
	 * @covers \PHPixie\DB\PDO\Connection::execute
	 * @todo   Implement testExecute().
	 */
	public function testExecute()
	{
		$this->object->execute("SELECT * FROM fairies where id = ?", array(1));
	}

	/**
	 * @covers \PHPixie\DB\PDO\Connection::execute
	 * @todo   Implement testExecute().
	 */
	public function testExecuteException()
	{
		$except = false;
		try {
			$this->object->execute("SELECUT * FROM fairies where id = ?", array(1));
		} catch (Exception $e) {
			$except = true;
		}
		$this->assertEquals(true, $except);
	}

	/**
	 * @covers \PHPixie\DB\PDO\Connection::named_query
	 * @todo   Implement testExecute().
	 */
	public function testNamed_query()
	{
		$this->object->named_query("SELECT * FROM fairies where id = :id", array(array('id' => 1)));
	}

	/**
	 * @covers \PHPixie\DB\PDO\Connection::named_query
	 * @todo   Implement testExecute().
	 */
	public function testNamed_queryException()
	{
		$except = false;
		try {
			$this->object->named_query("SELsECT * FROM fairies where id = :id", array(array('id' => 1)));
		} catch (Exception $e) {
			$except = true;
		}
		$this->assertEquals(true, $except);
	}
	

}
